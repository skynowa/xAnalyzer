/**
 * \file  Config.h
 * \brief config
 */


#pragma once


#include <xLib/xLib.h>

using namespace xl;
//-------------------------------------------------------------------------------------------------
#define xANALYZER_DEBUG 1

const std::ctstring_t appName = xT("@PROJECT_NAME@");
//-------------------------------------------------------------------------------------------------
/**
 * Set OS environment variable to disable checks
 * From shell: export ANALYZER_SKIP_CHECK=1
 *
 * 0 - enable checks
 * 1 - skip checks
 *
 * SKIP_CHECK = os.environ.get("ANALYZER_SKIP_CHECK")
 */
cbool_t SKIP_CHECK = false;

/**
 * Disallow committing when errors/warnings occur
 * 0 - allow commit
 * 1 - disallow commit
 */
cbool_t STOP_ON_FAIL = false;

/**
 * AnalyzerDataIn
 */

/**
 * Project root directory
 */
std::ctstring_t PROJECT_DIR =
	// "/home/skynowa/Projects/xLib"
	"/home/skynowa/Projects/xAnalyzer"
	;

/**
 * Check mode
 * 0 - check changed files and headers
 * 1 - check changed files only
 */
cbool_t QUICK_CHECK = true;

/**
 * C++ language / standart
 */
std::ctstring_t C_LANG   = "c";
std::ctstring_t CPP_LANG = "c++";
std::ctstring_t CPP_STD  = "c++14";

/**
 * Exclude files for checking
 */
std::cvec_tstring_t CPP_MASK = {"h", "hh", "hpp", "inl", "cc", "cpp", "cxx", "in"};

/**
 * TODO: Number of jobs (Cppcheck support only)
 */
std::csize_t JOBS_NUM = 1;

/**
 * Cppcheck
 *
 * - all
 *   Enable all checks. It is recommended to only
 *   use --enable=all when the whole program is
 *   scanned, because this enables unusedFunction.
 *
 * - warning
 *   Enable warning messages
 *
 * - style
 *   Enable all coding style checks. All messages
 *   with the severities 'style', 'performance' and
 *   'portability' are enabled.
 *
 * - performance
 *   Enable performance messages
 *
 * - portability
 *   Enable portability messages
 *
 * - information
 *   Enable information messages
 *
 * - unusedFunction
 *   Check for unused functions. It is recommend
 *   to only enable this when the whole program is
 *   scanned.
 *
 * - missingInclude
 *   Warn if there are missing includes. For
 *   detailed information, use '--check-config'.
 */
// TODO: information,missingInclude - "Cppcheck cannot find all the include files..."
// TOOD: style,performance,portability,unusedFunction - on for prod
std::ctstring_t CPPCHECK_ERROR_LEVEL = "warning,performance,portability";
//-------------------------------------------------------------------------------------------------
